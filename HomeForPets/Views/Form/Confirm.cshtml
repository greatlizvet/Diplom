@model HomeForPets.Models.FormCreateViewModel

@{
    ViewBag.Title = "Подтвреждение";
}

<h2>Подтвердите корректность введеных данных</h2>
<p>В случае необходимости вы можете исправить их прямо сейчас</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Form.FormID)

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Form.FormName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Form.FormName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Form.FormName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form.Desieses, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Form.Desieses, 3, 10, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Form.Desieses, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form.Difficulties, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Form.Difficulties, 5, 10, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Form.Difficulties, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form.Temperament, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Form.Temperament, 5, 10, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Form.Temperament, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form.Specificity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Form.Specificity, 5, 10, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Form.Specificity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Form.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Form.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control" id="Sex" name="Sex">
                        <option value="man">Мужской</option>
                        <option value="woman">Женский</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Form.Color, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Form.Color, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Form.CategoryID, Model.Categories as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Form.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form.SpecieID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Form.SpecieID, Model.Species as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Form.SpecieID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Form.Images, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="files" multiple />
                </div>
            </div>
        </div>

        <div class="row">
            @foreach (var img in Model.Form.Images)
            {
                <div class="col-md-offset-1 col-lg-3 anketa-image-content">
                    <img src="@img.Path" />
                </div>
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" value="Добавить" class="btn btn-primary" />
            </div>
            <div class="col-md-1" >
                @Html.ActionLink("Отмена", "Index", "Home", new { @class = "btn btn-default"})
            </div>
        </div>
    </div>
}
